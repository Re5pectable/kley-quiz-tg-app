"""init

Revision ID: 6fbd75adf315
Revises: 
Create Date: 2025-01-19 15:03:49.094810

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '6fbd75adf315'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('quizes',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('header', sa.String(), nullable=True),
    sa.Column('short_name', sa.String(), nullable=True),
    sa.Column('text', sa.String(), nullable=True),
    sa.Column('config', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('point_fields', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('logo_url', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sessions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('tg_id', sa.String(), nullable=True),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('user_agent', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('quiz_questions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('quiz_id', sa.UUID(), nullable=True),
    sa.Column('text', sa.String(), nullable=True),
    sa.Column('pic_url', sa.String(), nullable=True),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['quiz_id'], ['quizes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_quiz_questions_quiz_id'), 'quiz_questions', ['quiz_id'], unique=False)
    op.create_table('quiz_results',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('quiz_id', sa.UUID(), nullable=True),
    sa.Column('header', sa.String(), nullable=True),
    sa.Column('text', sa.String(), nullable=True),
    sa.Column('points', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('pic_url', sa.String(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['quiz_id'], ['quizes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_quiz_results_quiz_id'), 'quiz_results', ['quiz_id'], unique=False)
    op.create_table('games',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('session_id', sa.UUID(), nullable=True),
    sa.Column('quiz_id', sa.UUID(), nullable=True),
    sa.Column('quiz_result_id', sa.UUID(), nullable=True),
    sa.Column('quiz_result_copy', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('is_finished', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['quiz_id'], ['quizes.id'], ),
    sa.ForeignKeyConstraint(['quiz_result_id'], ['quiz_results.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_games_quiz_id'), 'games', ['quiz_id'], unique=False)
    op.create_index(op.f('ix_games_quiz_result_id'), 'games', ['quiz_result_id'], unique=False)
    op.create_index(op.f('ix_games_session_id'), 'games', ['session_id'], unique=False)
    op.create_table('quiz_question_answers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('quiz_question_id', sa.UUID(), nullable=True),
    sa.Column('text', sa.String(), nullable=True),
    sa.Column('note', sa.String(), nullable=True),
    sa.Column('points', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['quiz_question_id'], ['quiz_questions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_quiz_question_answers_quiz_question_id'), 'quiz_question_answers', ['quiz_question_id'], unique=False)
    op.create_table('game_answers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('game_id', sa.UUID(), nullable=True),
    sa.Column('quiz_answer_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], ),
    sa.ForeignKeyConstraint(['quiz_answer_id'], ['quiz_question_answers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_game_answers_game_id'), 'game_answers', ['game_id'], unique=False)
    op.create_table('invitations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('short_name', sa.String(), nullable=True),
    sa.Column('game_id', sa.UUID(), nullable=True),
    sa.Column('click_counter', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_invitations_game_id'), 'invitations', ['game_id'], unique=False)
    op.create_index(op.f('ix_invitations_short_name'), 'invitations', ['short_name'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_invitations_short_name'), table_name='invitations')
    op.drop_index(op.f('ix_invitations_game_id'), table_name='invitations')
    op.drop_table('invitations')
    op.drop_index(op.f('ix_game_answers_game_id'), table_name='game_answers')
    op.drop_table('game_answers')
    op.drop_index(op.f('ix_quiz_question_answers_quiz_question_id'), table_name='quiz_question_answers')
    op.drop_table('quiz_question_answers')
    op.drop_index(op.f('ix_games_session_id'), table_name='games')
    op.drop_index(op.f('ix_games_quiz_result_id'), table_name='games')
    op.drop_index(op.f('ix_games_quiz_id'), table_name='games')
    op.drop_table('games')
    op.drop_index(op.f('ix_quiz_results_quiz_id'), table_name='quiz_results')
    op.drop_table('quiz_results')
    op.drop_index(op.f('ix_quiz_questions_quiz_id'), table_name='quiz_questions')
    op.drop_table('quiz_questions')
    op.drop_table('sessions')
    op.drop_table('quizes')
    # ### end Alembic commands ###
